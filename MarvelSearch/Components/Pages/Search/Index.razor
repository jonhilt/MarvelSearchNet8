@page "/Search"
@using FluentMarvelSdk
@inject MarvelApiService MarvelApi
@attribute [StreamRendering]

<PageTitle>Home</PageTitle>

<form method="GET" class="text-center mb-4 p-4">
    <InputText @bind-Value="SearchTerm" class="p-2 rounded-md block w-2/3 mx-auto border border-gray-300"/>
    <button type="submit" class="mt-2 p-2 bg-indigo-400 text-white rounded-md font-semibold">Search Characters</button>
</form>

<div class="grid grid-cols-4 gap-6">

    @if (string.IsNullOrEmpty(SearchTerm))
    {
        <p>Please enter a search term to begin...</p>
    }
    else if (apiResponse?.Results == null)
    {
        <p class="text-gray-900">Loading...</p>
    }
    else
    {
        @foreach (var result in apiResponse.Results.ToList())
        {
            <SearchResult Result="result" @rendermode="@RenderMode.InteractiveServer"/>
        }
    }

</div>

@code {
    private DataContainer<Character>? apiResponse;

    [SupplyParameterFromQuery]
    public string SearchTerm { get; set; }

    protected override async Task OnInitializedAsync()
    {
        apiResponse = await MarvelApi.GetCharacters().WithNameStartingWith(SearchTerm).Excelsior(); 
    }

}